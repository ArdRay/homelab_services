version: "3.8"

services:
  drone:
    image: drone/drone:${DRONE_VERSION:-2}
    restart: unless-stopped
    environment:
      # https://docs.drone.io/server/provider/gitea/
      - DRONE_GITEA_SERVER=https://${DRONE_GITEA_FQDN}
      - DRONE_GITEA_CLIENT_ID=${DRONE_GITEA_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${DRONE_GITEA_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=${DRONE_FQDN}
      - DRONE_SERVER_PROTO=https
      - DRONE_DATABASE_DRIVER=sqlite3
      - DRONE_DATABASE_DATASOURCE=/data/database.sqlite
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_USER_CREATE=username:ard,machine:false,admin:true,token:${DRONE_USER_PASSWORD}
      - DRONE_REGISTRATION_CLOSED=true
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost || exit 1" ]
      timeout: 45s
      interval: 20s
      retries: 10
      start_period: 5s
    networks:
      - cicd_services
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./drone:/data

  drone-runner:
    image: drone/drone-runner-docker:${DRONE_RUNNER_VERSION:-1}
    restart: unless-stopped
    depends_on:
      drone:
        condition: service_healthy
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_NAME=drone_runner
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NETWORKS=cicd_cicd_runners
      - DRONE_UI_USERNAME=ard
      - DRONE_UI_PASSWORD=${DRONE_USER_PASSWORD}
    networks:
      - cicd_services
      - cicd_runners
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nginx:
    image: nginx:stable@sha256:aed492c4dc93d2d1f6fe9a49f00bc7e1863d950334a93facd8ca1317292bf6aa
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail --output /dev/null https://${DRONE_FQDN} || exit 1" ]
      timeout: 45s
      interval: 20s
      retries: 10
      start_period: 5s
    networks:
      - cicd_services
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /.acme.sh/${DRONE_FQDN}_ecc/fullchain.cer:/opt/ssl/${DRONE_FQDN}.cer:ro
      - /.acme.sh/${DRONE_FQDN}_ecc/${DRONE_FQDN}.key:/opt/ssl/${DRONE_FQDN}.key:ro
      - /.acme.sh/${DRONE_FQDN}_ecc/ca.cer:/opt/ssl/ca.cer:ro
    depends_on:
      drone:
        condition: service_healthy
    cpus: 1
    mem_limit: 512m
    mem_reservation: 128m

networks:
  cicd_services:
    external: false
  cicd_runners:
    external: false
